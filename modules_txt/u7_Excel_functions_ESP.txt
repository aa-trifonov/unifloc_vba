''=======================================================================================
''Unifloc 7.27b primavera                                          khabibullinra@gmail.com
''Petroleum engineering calculations modules (macroses)
''2000 - 2021
''
''=======================================================================================
'' функции для проведения расчетов по режимам работы УЭЦН из интерфейса Excel
'
Option Explicit
'
''=======================================================
''--------------------- ЭЦН -----------------------
''=======================================================
'
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальный напор ЭЦН (на основе каталога ЭЦН)
' учитывается поправка на вязкость и калибровки
Public Function ESP_head_m( _
        ByVal qliq_m3day As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id As Long = 737, _
        Optional ByVal mu_cSt As Double = -1, _
        Optional ByVal calibr_head As Double = 1, _
        Optional ByVal calibr_rate As Double = 1, _
        Optional ByVal calibr_power As Double = 1)
' qliq_m3day - дебит жидкости в условиях насоса (стенд)
' num_stages  - количество ступеней
' freq_Hz    - частота вращения насоса
' pump_id    - номер насоса в базе данных
' mu_cSt     - вязкость жидкости, сСт;
' calibr_head - калибровка (множитель) на напор
' calibr_rate - калибровка (множитель) на расход
' calibr_power - калибровка (множитель) на мощность
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_head_m = 0
        Exit Function
    End If
    
    With esp
        .calibr_head = calibr_head
        .calibr_rate = calibr_rate
        .calibr_power = calibr_power
        .freq_Hz = freq_Hz
        .stage_num = num_stages
        qliq_m3day = qliq_m3day / .calibr_rate
        ESP_head_m = .get_ESP_head_m(qliq_m3day, num_stages, mu_cSt)
        ESP_head_m = ESP_head_m * .calibr_head
    End With
    Exit Function
err1:
    ESP_head_m = "Error:ESP_head_m:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальная мощность потребляемая ЭЦН с вала (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_power_W( _
        ByVal qliq_m3day As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id As Long = 737, _
        Optional ByVal mu_cSt As Double = -1, _
        Optional ByVal calibr_head As Double = 1, _
        Optional ByVal calibr_rate As Double = 1, _
        Optional ByVal calibr_power As Double = 1)
' qliq_m3day - дебит жидкости в условиях насоса (стенд)
' num_stages  - количество ступеней
' freq_Hz    - частота вращения насоса
' pump_id    - номер насоса в базе данных
' mu_cSt     - вязкость жидкости, сСт;
' calibr_head - калибровка (множитель) на напор
' calibr_rate - калибровка (множитель) на расход
' calibr_power - калибровка (множитель) на мощность
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_power_W = 0
        Exit Function
    End If
    With esp
        .calibr_head = calibr_head
        .calibr_rate = calibr_rate
        .calibr_power = calibr_power
        .freq_Hz = freq_Hz
        .stage_num = num_stages
        qliq_m3day = qliq_m3day / .calibr_rate
        ESP_power_W = .get_ESP_power_W(qliq_m3day, num_stages, mu_cSt)
        ESP_power_W = ESP_power_W * .calibr_power
    End With
    Exit Function
err1:
    ESP_power_W = -1
    add_log_msg "Error:ESP_power_W:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' номинальный КПД ЭЦН (на основе каталога ЭЦН)
' учитывается поправка на вязкость
Public Function ESP_eff_fr( _
        ByVal qliq_m3day As Double, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal pump_id As Long = 737, _
        Optional ByVal mu_cSt As Double = -1, _
        Optional ByVal calibr_head As Double = 1, _
        Optional ByVal calibr_rate As Double = 1, _
        Optional ByVal calibr_power As Double = 1)
' qliq_m3day - дебит жидкости в условиях насоса (стенд)
' num_stages  - количество ступеней
' freq_Hz    - частота вращения насоса
' pump_id    - номер насоса в базе данных
' mu_cSt     - вязкость жидкости, сСт;
' calibr_head - калибровка (множитель) на напор
' calibr_rate - калибровка (множитель) на расход
' calibr_power - калибровка (множитель) на мощность
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_eff_fr = 0
        Exit Function
    End If
    With esp
        .calibr_head = calibr_head
        .calibr_rate = calibr_rate
        .calibr_power = calibr_power
        .freq_Hz = freq_Hz
        .stage_num = num_stages
        qliq_m3day = qliq_m3day / .calibr_rate
        esp.correct_visc = True
        ESP_eff_fr = .get_ESP_effeciency_fr(qliq_m3day, mu_cSt)
        ESP_eff_fr = ESP_eff_fr * .calibr_head * .calibr_rate / .calibr_power
    End With
    Exit Function
err1:
    ESP_eff_fr = -1
    add_log_msg "Error:ESP_eff_fr:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' название ЭЦН по номеру
Public Function ESP_name(Optional ByVal pump_id As Long) As String
' pump_id    - идентификатор насоса в базе данных
' результат - название насоса
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_name = "no name"
        Exit Function
    End If
    ESP_name = esp.db.name
    Exit Function
err1:
    ESP_name = -1
    add_log_msg "Error:ESP_name:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' максимальный дебит ЭЦН для заданной частоты
' по номинальной кривой РНХ
Public Function ESP_rate_max_sm3day( _
    Optional ByVal freq_Hz As Double = 50, _
    Optional ByVal pump_id As Long = 737, _
    Optional ByVal mu_cSt As Double = -1, _
    Optional ByVal calibr_rate As Double = 1) As Double
' freq_Hz   - частота вращения ЭЦН
' pump_id    - идентификатор насоса в базе данных
' mu_cSt - вязкость для расчета поправок
' calibr_rate - калибровка на расход
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_rate_max_sm3day = 0
        Exit Function
    End If
    esp.freq_Hz = freq_Hz
    esp.calibr_rate = calibr_rate
    ESP_rate_max_sm3day = esp.rate_max_sm3day(mu_cSt)
    Exit Function
err1:
    ESP_rate_max_sm3day = -1
    add_log_msg "Error:ESP_rate_max_sm3day:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' оптимальный дебит ЭЦН для заданной частоты
' по номинальной кривой РНХ
Public Function ESP_optRate_m3day( _
    Optional ByVal freq_Hz As Double = 50, _
    Optional ByVal pump_id As Long = 737, _
    Optional ByVal mu_cSt As Double = -1, _
    Optional ByVal calibr_rate As Double = 1) As Double
' freq_Hz   - частота вращения ЭЦН
' pump_id    - идентификатор насоса в базе данных
'description_end
On Error GoTo err1:
    Dim esp As New CESPpump
    Call esp.set_ID(pump_id)
    If esp Is Nothing Then
        ESP_optRate_m3day = 0
        Exit Function
    End If
    esp.freq_Hz = freq_Hz
    esp.calibr_rate = calibr_rate
    ESP_optRate_m3day = esp.rate_nom_sm3day(mu_cSt)
    Exit Function
err1:
    ESP_optRate_m3day = -1
    add_log_msg "Error:ESP_optRate_m3day:" & Err.Description
End Function
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
' функция возвращает идентификатор типового насоса по значению
' номинального дебита
Public Function ESP_id_by_rate(q As Double)
' возвращает ID в зависимости от номинального дебита.
' насосы подобраны вручную из текущей базы.
' Q - номинальный дебит
'description_end
    If q > 0 And q < 20 Then ESP_id_by_rate = 738: ' ЭЦН5-15
    If q >= 20 And q < 40 Then ESP_id_by_rate = 740: ' ЭЦН5-30
    If q >= 40 And q < 60 Then ESP_id_by_rate = 1005: ' ЭЦН5-50
    If q >= 60 And q < 100 Then ESP_id_by_rate = 1006: ' ЭЦН5-80
    If q >= 100 And q < 150 Then ESP_id_by_rate = 737: ' ЭЦН5-125
    If q >= 150 And q < 250 Then ESP_id_by_rate = 748: ' ЭЦН5A-200
    If q >= 250 And q < 350 Then ESP_id_by_rate = 750: ' ЭЦН5A-320Э
    If q >= 350 And q < 600 Then ESP_id_by_rate = 753: ' ЭЦН5А-500
    If q >= 600 And q < 800 Then ESP_id_by_rate = 754: ' ЭЦН5А-700
    If q >= 800 And q < 1200 Then ESP_id_by_rate = 755: ' ЭЦН6-1000
    If q > 1200 Then ESP_id_by_rate = 758
End Function
'description_end
'
'=======================================================
'--------------- Вспомогательные функции ---------------
'=======================================================
'description_to_manual      - для автогенерации описания - помещает заголовок функции и окружающие комментарии в мануал (со след строки)
'функция расчета давления на выходе/входе ЭЦН в рабочих условиях
'большинство параметров задается явно
Public Function ESP_p_atma( _
                 ByVal p_calc_atma As Double, _
        Optional ByVal t_intake_C As Double = 50, _
        Optional ByVal t_dis_C As Double = 50, _
        Optional ByVal feed As String = "", _
        Optional ByVal pump_id As Long = 737, _
        Optional ByVal num_stages As Integer = 1, _
        Optional ByVal freq_Hz As Double = 50, _
        Optional ByVal calc_along_flow As Boolean = True, _
        Optional ByVal calibr_head As Double = 1, _
        Optional ByVal calibr_rate As Double = 1, _
        Optional ByVal calibr_power As Double = 1, _
        Optional ByVal gas_correct_model As Integer = 0, _
        Optional ByVal gas_correct_stage_by_stage As Integer = 0, _
        Optional ByVal param As String = "")
' p_calc_atma      - давление для которого делается расчет
'                    либо давление на приеме насоса
'                    либо давление на выкиде насоса
'                    определяется параметром calc_along_flow
' t_intake_C       - температура на приеме насоcа
' t_dis_C          - температура на выкиде насоса.
'             если = 0 и calc_along_flow = 1 то рассчитывается
' feed     - параметры потока флюидов json строка. Используйте
'            функцию encode_feed() для генерации
' pump_id          - идентификатор насоса
' num_stages       - количество ступеней
' freq_Hz          - частота вращения вала ЭЦН, Гц
' calc_along_flow  - режим расчета снизу вверх или сверху вниз
'          calc_along_flow = True => p_atma давление на приеме
'          calc_along_flow = False => p_atma давление на выкиде
' calibr_head - калибровка (множитель) на напор
' calibr_rate - калибровка (множитель) на расход
' calibr_power - калибровка (множитель) на мощность
' gas_correct_model - модель калибровки по газу
' gas_correct_stage_by_stage - модель применятеся
'                     для всех ступеней по отдельности
' param     - дополнительные параметры расчета потока
' результат   - массив значений включающий
'description_end
' ESP_gas_correct  - деградация по газу:
'      0 - 2 задает значение вручную;
'      10 стандартный ЭЦН (предел 25%);
'      20 ЭЦН с газостабилизирующим модулем (предел 50%);
'      30 ЭЦН с осевым модулем (предел 75%);
'      40 ЭЦН с модифицированным ступенями (предел 40%).
'      110+, тогда модель n-100 применяется ко всем ступеням отдельно
'         Предел по доле газа на входе в насос после сепарации
'         на основе статьи SPE 117414 (с корректировкой)
'         поправка дополнительная к деградации (суммируется).
' calibr  - коэффициент поправки на напор.
'       если массив то второе значение - поправыка на подачу (множитель)
'       третье на мощность (множитель)
' dnum_stages_integrate - шаг интегрирования ЭЦН
'           если >1 будет быстрее но менее точно
' out_curves_num_points - количество точек для вывода значений
'                   по ступеням
' num_value       - значение которое будет выводиться первым
' q_gas_sm3day    - свободный газ в потоке
    Dim arr
    Dim esp As New CESPpump
    Dim out_curves_num_points As Integer
    
    Dim show_log As Boolean
    Dim show_array As Boolean
    Dim num_value As Integer
    
On Error GoTo er1:
    
    Call esp.set_ID(pump_id)    ' get ESP from database
    
    If esp Is Nothing Then
        ESP_p_atma = "no ESP"
        Exit Function
    End If
    
    If Len(feed) < 2 Then feed = encode_feed()
    
    ' read param
    Dim prmd As Dictionary
    
    Set prmd = param_to_dict(param)
         
    show_log = prmd(prm_show_log)
    num_value = prmd(prm_num_value)
    show_array = prmd(prm_show_array)
    
    With esp
        Call .fluid.init_feed(feed)  ' initialize PVT properties
        
        .gas_correct_model = gas_correct_model
        .gas_correct_stage_by_stage = gas_correct_stage_by_stage
        .calibr_head = calibr_head
        .calibr_rate = calibr_rate
        .calibr_power = calibr_power
        .freq_Hz = freq_Hz
        .stage_num = num_stages
        
        If prmd.Exists(prm_dnum_stages_integrate) Then
            .dnum_stages_integrate = prmd(prm_dnum_stages_integrate)
        Else
            .dnum_stages_integrate = 10
        End If
        
        If prmd.Exists(prm_out_curves_num_points) Then
            out_curves_num_points = prmd(prm_out_curves_num_points)
        Else
            out_curves_num_points = 20
        End If
                 
        If show_array Then
            Call .calc_ESP(p_calc_atma, t_intake_C, t_dis_C, calc_along_flow, saveCurve:=True)
            arr = .get_results_array(out_curves_num_points, show_log)
            If calc_along_flow Then
                arr(0, 0) = .p_dis_atma
                arr(1, 0) = "p_dis_atma"
            Else
                arr(0, 0) = .p_int_atma
                arr(1, 0) = "p_intake_atma"
            End If
            arr(0, 0) = arr(0, num_value)
            arr(1, 0) = arr(1, num_value)
            
            ESP_p_atma = arr
        Else
            Call .calc_ESP(p_calc_atma, t_intake_C, t_dis_C, calc_along_flow, saveCurve:=False)
             
            If calc_along_flow Then
                ESP_p_atma = .p_dis_atma
            Else
                ESP_p_atma = .p_int_atma
            End If
        End If
    End With
    
    
    Exit Function
er1:
    ESP_p_atma = "error" & Err.Description
    
End Function
' корректировка напора развиваемого ЭЦН из влияния газа
' на основе стендовых испытаний Горидько К в 2020 - 2021 году 26.04.2021
Public Function gas_corr(Optional gf As Double = 1, Optional q As Double = 50)
'
'
'
    Dim arr(1 To 12, 1 To 20) As Double
    Dim x(1 To 12, 1 To 1) As Double
    Dim y(1 To 1, 1 To 20) As Double
    
    Dim a As Variant
    Dim x_ As Variant
    Dim y_ As Variant
    
    a = Array(Array(1, 0.94488189, 0.535433071, 0.322834646, 0.299212598, 0.291338583, 0.267716535, 0.251968504, 0.220472441, 0.196850394, 0.173228346, 0.141732283), _
    Array(1, 0.952380952, 0.634920635, 0.428571429, 0.396825397, 0.380952381, 0.357142857, 0.333333333, 0.293650794, 0.261904762, 0.23015873, 0.19047619), _
    Array(1, 0.96, 0.736, 0.536, 0.496, 0.472, 0.448, 0.416, 0.368, 0.328, 0.288, 0.24), _
    Array(1, 0.97199341, 0.827018122, 0.658978583, 0.601317957, 0.57660626, 0.551894563, 0.510708402, 0.461285008, 0.39538715, 0.345963756, 0.28830313), _
    Array(1, 0.979831933, 0.87394958, 0.722689076, 0.655462185, 0.621848739, 0.596638655, 0.554621849, 0.487394958, 0.428571429, 0.369747899, 0.305882353), _
    Array(1, 0.982905983, 0.907692308, 0.774358974, 0.700854701, 0.666666667, 0.632478632, 0.581196581, 0.514529915, 0.444444444, 0.384615385, 0.290598291), _
    Array(1, 0.98540146, 0.948905109, 0.857664234, 0.775547445, 0.708029197, 0.638686131, 0.565693431, 0.501824818, 0.419708029, 0.328467153, 0.200729927), _
    Array(1, 0.983935743, 0.963855422, 0.893574297, 0.799196787, 0.698795181, 0.592369478, 0.512048193, 0.441767068, 0.335341365, 0.200803213, -1.11468E-17), _
    Array(1, 0.985324948, 0.964360587, 0.903563941, 0.807127883, 0.693920335, 0.58490566, 0.503144654, 0.419287212, 0.299790356, 0.146750524, -0.1), _
    Array(1, 0.983796296, 0.965277778, 0.909722222, 0.805555556, 0.659722222, 0.546296296, 0.428240741, 0.300925926, 0.122685185, -0.162037037, -0.6), _
    Array(1, 0.987951807, 0.963855422, 0.910843373, 0.8, 0.648192771, 0.530120482, 0.397590361, 0.240963855, 0.024096386, -0.361445783, -1.1), _
    Array(1, 0.986842105, 0.960526316, 0.907894737, 0.784210526, 0.626315789, 0.497368421, 0.342105263, 0.131578947, -0.263157895, -0.789473684, -1.789473684), _
    Array(1, 0.984615385, 0.950769231, 0.892307692, 0.753846154, 0.584615385, 0.415384615, 0.215384615, -0.307692308, -1, -2, -3), _
    Array(1, 0.98245614, 0.936842105, 0.870175439, 0.698245614, 0.526315789, 0.333333333, -0.070175439, -1, -2, -3, -4), _
    Array(1, 0.980392157, 0.921568627, 0.843137255, 0.654901961, 0.470588235, 0.254901961, -0.392156863, -2, -3, -4, -5), _
    Array(1, 0.980392157, 0.892156863, 0.794117647, 0.56372549, 0.367647059, 0, -1.5, -5, -6, -7, -8), _
    Array(1, 0.981818182, 0.848484848, 0.727272727, 0.478787879, 0.181818182, -0.363636364, -3, -7, -8, -9, -10), _
    Array(1, 0.954545455, 0.718181818, 0.536363636, 0.227272727, -0.454545455, -1.818181818, -6, -10, -11, -12, -13), _
    Array(1, 0.9, 0.2, 0.05, -0.5, -2, -5, -11, -15, -16, -17, -18), _
    Array(1, 0.7, -0.5, -0.7, -1.5, -5, -10, -17, -20, -21, -22, -24))
    
    
    x_ = Array(0, 1, 2, 3, 5, 7, 9, 12, 15, 18, 21, 25)
    y_ = Array(0, 11, 21, 32, 37, 42, 53, 63, 65, 72, 74, 77, 81, 84, 86, 89, 92, 95, 100, 105)
    
    
    Dim i As Integer
    Dim j As Integer
    
    For i = 1 To 12
        x(i, 1) = x_(i - 1)
        For j = 1 To 20
            arr(i, j) = a(j - 1)(i - 1)
            If i = 1 Then y(1, j) = y_(j - 1)
        Next j
    Next i
    
    Dim arg(1 To 1, 1 To 2) As Double
    arg(1, 1) = q
    arg(1, 2) = gf
    gas_corr = crv_interpolation_2D(y, x, arr, arg)(1, 1)
End Function

